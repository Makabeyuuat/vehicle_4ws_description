<launch>

  <!-- xacro を展開して robot_description に設定 -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find vehicle_4ws_description)/urdf/vehicle_4ws_real.xacro'" />

  <!-- Gazebo にスポーン -->
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-param robot_description -urdf -model vehicle_4ws -x -6.0 -y -1.0 -z 0.29 -R 0.0 -P -0.143 -Y 0.0" />

  <!-- RViz の設定 -->
  <arg name="rvizconfig" default="$(find vehicle_4ws_description)/rviz/urdf.rviz"/>
  <arg name="gui" default="true" />

  <!-- hill を hill 名前空間でスポーン -->
  <group ns="hill">
    <param name="hill_description"
           command="$(find xacro)/xacro '$(find hill_description)/urdf/hill.xacro'" />

    <node pkg="gazebo_ros" type="spawn_model" name="spawn_model"
          args="-param hill_description -urdf -model hill -x -6.9 -y 0 -z 0" />
  </group>

  <!-- Gazebo の空の世界を起動 -->
  <arg name="world_name" value="$(find vehicle_4ws_description)/worlds/marker.world"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="true"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <node pkg="vehicle_4ws_description"
      type="trajectory_marker_publisher"
      name="trajectory_marker_publisher"
      output="screen"/>

   <!-- controller の起動 -->
  <rosparam file="$(find vehicle_4ws_description)/config/controller.yaml" command="load"/>
  <node name="controller_spawner" pkg="controller_manager"
        type="spawner" respawn="false"
        output="screen" ns="vehicle_4ws"
        args="joint_state_controller front_right_steering_position_controller front_right_wheel_velocity_controller
              rear_right_wheel_velocity_controller front_left_steering_position_controller 
              front_left_wheel_velocity_controller rear_left_wheel_velocity_controller"/> 

   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/vehicle_4ws/joint_states" />
  </node>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />

  
</launch>


